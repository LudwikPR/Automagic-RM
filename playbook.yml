
---
- hosts: all
  become: true
  tasks:

  - name: install node
    shell: 'curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -'

  - name: Install stuff
    apt: pkg={{item}} state=installed update_cache=true
    with_items:
        - git
        - python
        - python-pip
        - python-dev
        - build-essential
        - nodejs
        - nginx
        - unzip

  - name: Clone Rocketmap
    git:
      repo: 'https://github.com/RocketMap/RocketMap.git'
      dest: /home/vagrant/RocketMap

  - name: Install Sprites
    unarchive:
      src: 'http://stuff.notfurprofit.org/folf07-2.zip'
      dest: /home/vagrant/RocketMap
      remote_src: yes
      validate_certs: False

  - name: Install Pip Requirements
    pip:
      requirements: /home/vagrant/RocketMap/requirements.txt

  - name: Run expect to wait for a successful PXE boot via out-of-band CIMC
    shell: |
      npm install -g npm
      apt-get uninstall node
      npm install -g n
      n stable
      npm install
      npm rebuild node-sass
    args:
      executable: /bin/bash

  - name: Node requirements
    npm:
      path: /home/vagrant/RocketMap

  - name: Move Frontend RocketMap Configuration
    copy:
      src: src/config/frontend.ini
      dest: /home/vagrant/RocketMap/config/config.ini
      owner: root
    copy:
      src: src/config/frontend.css
      dest: /home/vagrant/RocketMap/static/css/custom.css
      owner: vagrant
    copy:
      src: src/config/frontend.js
      dest: /home/vagrant/RocketMap/static/js/custom.js
      owner: vagrant
    copy:
      src: src/config/frontend.html
      dest: /home/vagrant/RocketMap/templates/map.html
      owner: vagrant

  - name: Import NGINX Configuration
    copy: 
      src: config/nginx.conf 
      dest: /etc/nginx/nginx.conf
      owner: root 
      mode: 0600

  - name: Import Frontend VHOST
    copy: 
      src: src/nginx/frontend.conf 
      dest: /etc/nginx/conf.d/frontend.conf 
      owner: root 
      mode: 0600

  - name: Reload/Restart NGINX
    service: 
      name: nginx 
      state: restarted 
      enabled: yes
    
  - name: Move SYSTEMD deamon
    copy:
      src: src/services/web.service
      dest: /etc/systemd/system/web.ini
      owner: root
  
  - name: Enable SYSTEMD deamon
    service:
      name: web.service
      state: started
      enabled: yes
